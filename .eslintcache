[{"/Users/cirusegal/Desktop/GA-Codes/Unit-Three/react-burger-stacker/src/App.js":"1","/Users/cirusegal/Desktop/GA-Codes/Unit-Three/react-burger-stacker/src/components/FunctionalComponent.js":"2","/Users/cirusegal/Desktop/GA-Codes/Unit-Three/react-burger-stacker/src/components/Ingredients.js":"3","/Users/cirusegal/Desktop/GA-Codes/Unit-Three/react-burger-stacker/src/components/IngredientList.js":"4","/Users/cirusegal/Desktop/GA-Codes/Unit-Three/react-burger-stacker/src/components/BurgerPane.js":"5","/Users/cirusegal/Desktop/GA-Codes/Unit-Three/react-burger-stacker/src/components/BurgerStack.js":"6","/Users/cirusegal/Desktop/GA-Codes/Unit-Three/react-burger-stacker/src/components/ClearBurger.js":"7"},{"size":1809,"mtime":1607110404944,"results":"8","hashOfConfig":"9"},{"size":146,"mtime":1606960554909,"results":"10","hashOfConfig":"9"},{"size":545,"mtime":1607103131729,"results":"11","hashOfConfig":"9"},{"size":359,"mtime":1607103635820,"results":"12","hashOfConfig":"9"},{"size":425,"mtime":1607109814892,"results":"13","hashOfConfig":"9"},{"size":555,"mtime":1607109729192,"results":"14","hashOfConfig":"9"},{"size":361,"mtime":1607110363990,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"rbsms2",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},"/Users/cirusegal/Desktop/GA-Codes/Unit-Three/react-burger-stacker/src/App.js",["34"],"import React, { useState } from 'react';\nimport BurgerPane from './components/BurgerPane'\n// import BurgerStack from './components/BurgerStack'\nimport IngredientList from './components/IngredientList'\nimport ClearBurger from './components/ClearBurger'\nimport './css/App.css'\n\n//we want to render the ingredients as soon as the user loads the page, thats why the array is inside app.js. which is the parent. \nconst App = () => {\n\n    const [items, setItems] = useState([ \n        { name: \"Kaiser Bun\", color: \"saddlebrown\" },\n        { name: \"Sesame Bun\", color: \"sandybrown\" },\n        { name: \"Gluten Free Bun\", color: \"peru\" },\n        { name: \"Lettuce Wrap\", color: \"olivedrab\" },\n        { name: \"Beef Patty\", color: \"#3F250B\" },\n        { name: \"Soy Patty\", color: \"#3F250B\" },\n        { name: \"Black Bean Patty\", color: \"#3F250B\" },\n        { name: \"Chicken Patty\", color: \"burlywood\" },\n        { name: \"Lettuce\", color: \"lawngreen\" },\n        { name: \"Tomato\", color: \"tomato\" },\n        { name: \"Bacon\", color: \"maroon\" },\n        { name: \"Onion\", color: \"lightyellow\" }, \n    ])\n\n    const [selectedIngredients, setselectedIngredients] = useState([])\n      \n    const addItem = (event, items) => {\n      event.preventDefault()\n      console.log(selectedIngredients)\n      console.log(items)\n      setselectedIngredients([items,...selectedIngredients])\n    }\n\n    const deleteItem= (event,id)=>{\n      event.preventDefault ()\n\n      setselectedIngredients(items.filter((deletedItem)=> deletedItem.id !== id))\n\n    }\n\n  return (\n    <div>\n      <div>\n      <IngredientList   addItem={addItem} items={items}/>  \n      </div>\n      <div>\n        <BurgerPane selectedIngredients={selectedIngredients} />\n        <ClearBurger deleteItem={deleteItem}/>\n      </div>\n    </div>\n    )\n  }\n\nexport default App","/Users/cirusegal/Desktop/GA-Codes/Unit-Three/react-burger-stacker/src/components/FunctionalComponent.js",[],["35","36"],"/Users/cirusegal/Desktop/GA-Codes/Unit-Three/react-burger-stacker/src/components/Ingredients.js",["37"],"import React from 'react'\n\n\nconst Ingredients = (props) => {\n    console.log(props.items)\n    return(\n    <div>\n        <ul>\n            {props.items.map((newItem, index) =>(\n                <li key={index} >\n                    {newItem.name}\n                    <button onClick= {(event)=>\n                    {\n                        {props.addItem(event, newItem)}\n                    }}>add</button>\n                    \n                </li>\n            )\n\n            )}\n        </ul> \n\n    </div>  \n    )\n}\n\n\nexport default Ingredients ","/Users/cirusegal/Desktop/GA-Codes/Unit-Three/react-burger-stacker/src/components/IngredientList.js",[],"/Users/cirusegal/Desktop/GA-Codes/Unit-Three/react-burger-stacker/src/components/BurgerPane.js",[],"/Users/cirusegal/Desktop/GA-Codes/Unit-Three/react-burger-stacker/src/components/BurgerStack.js",[],"/Users/cirusegal/Desktop/GA-Codes/Unit-Three/react-burger-stacker/src/components/ClearBurger.js",["38"],"\nconst ClearBurger = (props) => {\n    console.log(props.deletedItems)\n    return(\n    <div>\n        <ul>\n                    <button onClick= {(event, deletedItems)=>\n                    {\n                        {props.deleteItem(event, deletedItems)}\n                    }}>Delete</button>\n\n        </ul> \n\n    </div>  \n    )\n}\n\n\n\n\n\nexport default ClearBurger",{"ruleId":"39","severity":1,"message":"40","line":11,"column":19,"nodeType":"41","messageId":"42","endLine":11,"endColumn":27},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":14,"column":25,"nodeType":"49","messageId":"50","endLine":14,"endColumn":56},{"ruleId":"47","severity":1,"message":"48","line":9,"column":25,"nodeType":"49","messageId":"50","endLine":9,"endColumn":64},"no-unused-vars","'setItems' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation"]