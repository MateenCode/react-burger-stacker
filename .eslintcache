[{"/Users/gabbytam/Desktop/SEIclass/react-burger-stacker/src/index.js":"1","/Users/gabbytam/Desktop/SEIclass/react-burger-stacker/src/App.js":"2","/Users/gabbytam/Desktop/SEIclass/react-burger-stacker/src/components/IngredientList.js":"3","/Users/gabbytam/Desktop/SEIclass/react-burger-stacker/src/components/Ingredient.js":"4","/Users/gabbytam/Desktop/SEIclass/react-burger-stacker/src/components/BurgerPane.js":"5","/Users/gabbytam/Desktop/SEIclass/react-burger-stacker/src/components/BurgerStack.js":"6"},{"size":259,"mtime":1606960782433,"results":"7","hashOfConfig":"8"},{"size":1852,"mtime":1607024130878,"results":"9","hashOfConfig":"8"},{"size":612,"mtime":1607110219899,"results":"10","hashOfConfig":"8"},{"size":1099,"mtime":1607113777210,"results":"11","hashOfConfig":"8"},{"size":390,"mtime":1607112682102,"results":"12","hashOfConfig":"8"},{"size":510,"mtime":1606974830033,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"9seyzb",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/gabbytam/Desktop/SEIclass/react-burger-stacker/src/index.js",[],["29","30"],"/Users/gabbytam/Desktop/SEIclass/react-burger-stacker/src/App.js",["31"],"//import useState in this file to be able to use it in declaring states \nimport React, {useState} from \"react\";\n// Components imports\nimport IngredientList from \"./components/IngredientList\";\nimport BurgerPane from './components/BurgerPane';\n\n// CSS imports\nimport \"./css/App.css\";\n\nconst App = () => {\n    //initializing a state using setState and passing in an array of ingredients \n\n  //MOVE STATES OVER TO APP.JS SO THAT THEY ARE AVAILABLE EVERYWHERE \n  const [options, setOptions] = useState([\n    { name: \"Kaiser Bun\", color: \"saddlebrown\" },\n    { name: \"Sesame Bun\", color: \"sandybrown\" },\n    { name: \"Gluten Free Bun\", color: \"peru\" },\n    { name: \"Lettuce Wrap\", color: \"olivedrab\" },\n    { name: \"Beef Patty\", color: \"#3F250B\" },\n    { name: \"Soy Patty\", color: \"#3F250B\" },\n    { name: \"Black Bean Patty\", color: \"#3F250B\" },\n    { name: \"Chicken Patty\", color: \"burlywood\" },\n    { name: \"Lettuce\", color: \"lawngreen\" },\n    { name: \"Tomato\", color: \"tomato\" },\n    { name: \"Bacon\", color: \"maroon\" },\n    { name: \"Onion\", color: \"lightyellow\" },\n  ])\n\n  //initializing a state for the builtBurger and set it equal to an empty array\n  const [builtBurger, setBuiltBurger] = useState([])\n\n  const moveOption = (topping) => {\n    //console.log('move option topping that was passed', topping)\n    \n    //use setBuiltBurger to add new option/topping to the builtBurger state and copying the previous array AFTER adding new topping\n    setBuiltBurger([topping, ...builtBurger])\n  }\n\n  //function that clears the builtBurger array using the setBuiltBurger functionality \n  const clearBurger = () => {\n    setBuiltBurger([])\n  }\n\n  return (\n    <div className=\"App\">\n      <IngredientList options= {options} moveOption={moveOption}/>\n      <BurgerPane builtBurger={builtBurger} clearBurger={clearBurger}/>\n    </div>\n  );\n};\n\nexport default App;\n",["32","33"],"/Users/gabbytam/Desktop/SEIclass/react-burger-stacker/src/components/IngredientList.js",[],"/Users/gabbytam/Desktop/SEIclass/react-burger-stacker/src/components/Ingredient.js",["34","35"],"/Users/gabbytam/Desktop/SEIclass/react-burger-stacker/src/components/BurgerPane.js",[],"/Users/gabbytam/Desktop/SEIclass/react-burger-stacker/src/components/BurgerStack.js",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":14,"column":19,"nodeType":"42","messageId":"43","endLine":14,"endColumn":29},{"ruleId":"36","replacedBy":"44"},{"ruleId":"38","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":10,"column":14,"nodeType":"48","messageId":"49","endLine":10,"endColumn":16},{"ruleId":"46","severity":1,"message":"47","line":10,"column":36,"nodeType":"48","messageId":"49","endLine":10,"endColumn":38},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'setOptions' is assigned a value but never used.","Identifier","unusedVar",["50"],["51"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]